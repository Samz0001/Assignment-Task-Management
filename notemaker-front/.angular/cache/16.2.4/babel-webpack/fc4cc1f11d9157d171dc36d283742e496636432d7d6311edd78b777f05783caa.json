{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {}; // An object to store user input (email and password)\n  }\n\n  onSubmit() {\n    this.user['role'] = \"ROLE_USER\";\n    console.log(this.user);\n    // Call the register method from AuthService\n    this.authService.register(this.user).subscribe(response => {\n      alert(\"register successfull\");\n    }, error => {\n      // Handle registration error, display a message to the user, or perform other actions.\n      console.error('Registration failed:', error);\n      // You can also reset the form or display an error message to the user.\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"routerLink\", \"/login\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.user.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n        i0.ɵɵtext(11, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 6);\n        i0.ɵɵtext(15, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 8);\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"a\", 9);\n        i0.ɵɵtext(20, \"login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","authService","user","onSubmit","console","log","register","subscribe","response","alert","error","_","i0","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_3_listener","RegisterComponent_Template_input_ngModelChange_8_listener","$event","name","RegisterComponent_Template_input_ngModelChange_12_listener","email","RegisterComponent_Template_input_ngModelChange_16_listener","password","ɵɵadvance","ɵɵproperty","_r0","valid"],"sources":["D:\\notemaker-front\\src\\app\\register\\register.component.ts","D:\\notemaker-front\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  user: any = {}; // An object to store user input (email and password)\n\n  constructor(private authService: AuthService) {}\n\n  onSubmit() {\n    this.user['role']=\"ROLE_USER\";\n    console.log(this.user);\n    // Call the register method from AuthService\n    this.authService.register(this.user).subscribe(\n      (response: any) => {\n        alert(\"register successfull\");\n      },\n      (error: any) => {\n        // Handle registration error, display a message to the user, or perform other actions.\n        console.error('Registration failed:', error);\n        // You can also reset the form or display an error message to the user.\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Register</h2>\n    <form (ngSubmit)=\"onSubmit()\" #registerForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"email\">Name:</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"user.name\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\">Register</button>\n        <a routerLink=\"/login\">login</a>\n    </form>\n</div>"],"mappings":";;;;AAQA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,IAAI,GAAQ,EAAE,CAAC,CAAC;EAE+B;;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACD,IAAI,CAAC,MAAM,CAAC,GAAC,WAAW;IAC7BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAAC;IACtB;IACA,IAAI,CAACD,WAAW,CAACK,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAAC,CAACK,SAAS,CAC3CC,QAAa,IAAI;MAChBC,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,EACAC,KAAU,IAAI;MACb;MACAN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAnBUZ,iBAAiB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBjB,iBAAiB;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BX,EAAA,CAAAa,cAAA,aAAuB;QACfb,EAAA,CAAAc,MAAA,eAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACjBf,EAAA,CAAAa,cAAA,iBAAqD;QAA/Cb,EAAA,CAAAgB,UAAA,sBAAAC,oDAAA;UAAA,OAAYL,GAAA,CAAArB,QAAA,EAAU;QAAA,EAAC;QACzBS,EAAA,CAAAa,cAAA,aAAwB;QACDb,EAAA,CAAAc,MAAA,YAAK;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAChCf,EAAA,CAAAa,cAAA,eAAkG;QAAjCb,EAAA,CAAAgB,UAAA,2BAAAE,0DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAtB,IAAA,CAAA8B,IAAA,GAAAD,MAAA;QAAA,EAAuB;QAAxFnB,EAAA,CAAAe,YAAA,EAAkG;QAEtGf,EAAA,CAAAa,cAAA,aAAwB;QACDb,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACjCf,EAAA,CAAAa,cAAA,gBAAmG;QAAlCb,EAAA,CAAAgB,UAAA,2BAAAK,2DAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAtB,IAAA,CAAAgC,KAAA,GAAAH,MAAA;QAAA,EAAwB;QAAzFnB,EAAA,CAAAe,YAAA,EAAmG;QAEvGf,EAAA,CAAAa,cAAA,cAAwB;QACEb,EAAA,CAAAc,MAAA,iBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvCf,EAAA,CAAAa,cAAA,gBAA+G;QAArCb,EAAA,CAAAgB,UAAA,2BAAAO,2DAAAJ,MAAA;UAAA,OAAAP,GAAA,CAAAtB,IAAA,CAAAkC,QAAA,GAAAL,MAAA;QAAA,EAA2B;QAArGnB,EAAA,CAAAe,YAAA,EAA+G;QAEnHf,EAAA,CAAAa,cAAA,iBAA+E;QAAAb,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAChGf,EAAA,CAAAa,cAAA,YAAuB;QAAAb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAI;;;;QAXqCf,EAAA,CAAAyB,SAAA,GAAuB;QAAvBzB,EAAA,CAAA0B,UAAA,YAAAd,GAAA,CAAAtB,IAAA,CAAA8B,IAAA,CAAuB;QAIvBpB,EAAA,CAAAyB,SAAA,GAAwB;QAAxBzB,EAAA,CAAA0B,UAAA,YAAAd,GAAA,CAAAtB,IAAA,CAAAgC,KAAA,CAAwB;QAIftB,EAAA,CAAAyB,SAAA,GAA2B;QAA3BzB,EAAA,CAAA0B,UAAA,YAAAd,GAAA,CAAAtB,IAAA,CAAAkC,QAAA,CAA2B;QAE3DxB,EAAA,CAAAyB,SAAA,GAAgC;QAAhCzB,EAAA,CAAA0B,UAAA,cAAAC,GAAA,CAAAC,KAAA,CAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}