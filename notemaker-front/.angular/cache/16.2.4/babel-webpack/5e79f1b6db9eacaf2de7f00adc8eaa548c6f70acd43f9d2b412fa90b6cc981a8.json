{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8081/api/notes\";\n    this.header_object = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n  }\n  getData() {\n    return this.http.get(`${this.baseUrl}/recent`, {\n      headers: this.header_object\n    });\n  }\n  save(data) {\n    return this.http.post(`${this.baseUrl}/create`, data, {\n      headers: this.header_object\n    });\n  }\n  delete(id) {\n    console.log(id);\n    return this.http.delete(`${this.baseUrl}/delete?id=${id}`, {\n      headers: this.header_object\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","constructor","http","baseUrl","header_object","set","localStorage","getItem","getData","get","headers","save","data","post","delete","id","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\notemaker-front\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  header_object!:HttpHeaders;\n  baseUrl=\"http://localhost:8081/api/notes\";\n  constructor(private http:HttpClient) {\n    this.header_object=new HttpHeaders().set(\"Authorization\",\"Bearer \"+localStorage.getItem(\"token\"));\n  }\n  getData(){\n    return this.http.get(`${this.baseUrl}/recent`,{headers:this.header_object});\n  }\n  save(data:any){\n    return this.http.post(`${this.baseUrl}/create`,data,{headers:this.header_object});\n  }\n  delete(id:number){\n    console.log(id);\n    return this.http.delete(`${this.baseUrl}/delete?id=${id}`,{headers:this.header_object});\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAC,iCAAiC;IAEvC,IAAI,CAACC,aAAa,GAAC,IAAIL,WAAW,EAAE,CAACM,GAAG,CAAC,eAAe,EAAC,SAAS,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACnG;EACAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,SAAS,EAAC;MAACO,OAAO,EAAC,IAAI,CAACN;IAAa,CAAC,CAAC;EAC7E;EACAO,IAAIA,CAACC,IAAQ;IACX,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,OAAO,SAAS,EAACS,IAAI,EAAC;MAACF,OAAO,EAAC,IAAI,CAACN;IAAa,CAAC,CAAC;EACnF;EACAU,MAAMA,CAACC,EAAS;IACdC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACf,OAAO,IAAI,CAACb,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,cAAcY,EAAE,EAAE,EAAC;MAACL,OAAO,EAAC,IAAI,CAACN;IAAa,CAAC,CAAC;EACzF;EAAC,QAAAc,CAAA,G;qBAfUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}