{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  register(user) {\n    // Make a POST request to your registration endpoint\n    return this.http.post(`${this.apiUrl}/addNewUser`, user);\n  }\n  login(credentials) {\n    console.log(credentials);\n    // Make a POST request to your login endpoint\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","register","user","post","login","credentials","console","log","getToken","localStorage","getItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\notemaker-front\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) {}\n\n  register(user: any) {\n    // Make a POST request to your registration endpoint\n    return this.http.post(`${this.apiUrl}/addNewUser`, user);\n  }\n\n  login(credentials: any) {\n    console.log(credentials);\n    // Make a POST request to your login endpoint\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  getToken(){\n    return localStorage.getItem(\"token\");\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAEvCC,QAAQA,CAACC,IAAS;IAChB;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,aAAa,EAAEE,IAAI,CAAC;EAC1D;EAEAE,KAAKA,CAACC,WAAgB;IACpBC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxB;IACA,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEK,WAAW,CAAC;EAC5D;EACAG,QAAQA,CAAA;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAAC,QAAAC,CAAA,G;qBAjBUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}